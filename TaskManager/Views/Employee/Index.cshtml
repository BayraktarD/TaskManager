@model IEnumerable<TaskManager.Models.EmployeeModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .disabled {
        color: gray;
        pointer-events: none;
    }
</style>

@if (TempData["alertMsg"] != null)
{
    <div class="alert alert-danger">@TempData["alertMsg"]</div>
}

@if (TempData["modifiedWithSuccess"] != null)
{
    <div class="alert alert-success">@TempData["modifiedWithSuccess"]</div>
}

@if (TempData["employeeModificationFailed"] != null)
{
    <div class="alert alert-danger">@TempData["employeeModificationFailed"]</div>
}

@if (TempData["createdWithSuccess"] != null)
{
    <div class="alert alert-success">@TempData["createdWithSuccess"]</div>
}

@if (TempData["creationFailed"] != null)
{
    <div class="alert alert-danger">@TempData["creationFailed"]</div>
}

<h1 style="text-align:center">List Employees</h1><hr >

<p style="text-align:right">
    <a asp-action="Create" class="@(ViewBag.CanCreate ? "enabled" : "disabled")">Create New</a>

</p>


<table class="table table-striped">
    <thead>
        <tr>
            <th hidden>
                @Html.DisplayNameFor(model => model.IdEmployee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name) @Html.DisplayNameFor(model => model.Surname)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Surname)
            </th>*@
            <th hidden>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanCreateTasks)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanAssignTasks)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanModifyProfiles)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanDeleteTasks)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanCreateProfiles)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanDeleteProfiles)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.CanModifyTasks)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.JobTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobTitleString)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DepartmentString)
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.IdEmployee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname) @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.Surname)
            </td>*@
                <td hidden>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanCreateTasks)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanAssignTasks)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanModifyProfiles)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanDeleteTasks)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanCreateProfiles)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanDeleteProfiles)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.CanModifyTasks)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.JobTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JobTitleString)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartmentString)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new {  id=item.IdEmployee  }, new { @class = ViewBag.CanEdit ? "enabled" : "disabled" }) |

                    @Html.ActionLink("Delete", "Delete", new { id=item.IdEmployee },new { @class = ViewBag.CanDelete ? "enabled" : "disabled" }) |

                    @Html.ActionLink("Details", "Details", new {  id=item.IdEmployee  })

                </td>
            </tr>
        }
    </tbody>
</table>

