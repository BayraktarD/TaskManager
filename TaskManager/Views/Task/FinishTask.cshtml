@model TaskManager.Models.TaskModel

@{
    ViewData["Title"] = "FinishTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function displayFiles() {
        var checkboxHasAttachments = document.getElementById("HasAttachments");
        var input = document.getElementById("files");
        var ul = document.getElementById("fileList");
        while (ul.hasChildNodes()) {
            ul.removeChild(ul.firstChild);
        }
        for (var i = 0; i < input.files.length; i++) {
            var li = document.createElement("li");
            li.innerHTML = input.files[i].name;
            ul.appendChild(li);
        }
        checkboxHasAttachments.checked = true;

        if (!ul.hasChildNodes()) {
            var li = document.createElement("li");
            li.innerHTML = 'No Files Selected';
            ul.appendChild(li);
            checkboxHasAttachments.checked = false;

        }

    }

    function clearFiles() {
        var input = document.getElementById("files");
        input.value = "";
        displayFiles();
    }
</script>

@if (ViewData.ModelState.Values.Any(x => x.Errors.Count >= 1))
{
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
}



<h1>FinishTask</h1>

<h4>TaskModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Finish" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="IdTask" class="control-label" hidden></label>
                <input asp-for="IdTask" class="form-control" hidden />
                <span asp-validation-for="IdTask" class="text-danger" hidden></span>
            </div>

            <div class="form-group" hidden>
                <label asp-for="CreatedByString" class="control-label"></label>
                <input asp-for="CreatedByString" class="form-control" disabled="disabled" />
                <span asp-validation-for="CreatedByString" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CreatedByString" class="control-label"></label>
                <input asp-for="CreatedByString" class="form-control" disabled="disabled" />
                <span asp-validation-for="CreatedByString" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CreationDate" class="control-label"></label>
                <input asp-for="CreationDate" class="form-control" disabled="disabled" />
                <span asp-validation-for="CreationDate" class="text-danger"></span>
            </div>

            <div class="form-group" hidden>
                <label asp-for="AssignedToId" class="control-label"></label>
                <input asp-for="AssignedToId" class="form-control" disabled="disabled" />
                <span asp-validation-for="AssignedToId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AssignedToString" class="control-label"></label>
                <input asp-for="AssignedToString" class="form-control" disabled="disabled" />
                <span asp-validation-for="AssignedToString" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" disabled="disabled" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="EditableStartDate" disabled="disabled" /> @Html.DisplayNameFor(model => model.EditableStartDate)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" disabled="disabled" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="EditableEndDate" disabled="disabled" /> @Html.DisplayNameFor(model => model.EditableEndDate)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="TaskDetails" class="control-label"></label>
                <input asp-for="TaskDetails" class="form-control" disabled="disabled" />
                <span asp-validation-for="TaskDetails" class="text-danger"></span>
            </div>


            <div class="form-group form-check" hidden>
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" disabled="disabled" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" id="HasAttachments" asp-for="HasAttachments" disabled="disabled" /> @Html.DisplayNameFor(model => model.HasAttachments)
                </label>
            </div>


            <div class="form-group">
                <label asp-for="SolutionDetails" class="control-label"></label>
                <input asp-for="SolutionDetails" class="form-control" />
                <span asp-validation-for="SolutionDetails" class="text-danger"></span>
            </div>
            <div>
                <input asp-for="TaskAttachments" type="file" name="files" class="form-control" id="files" accept=".pdf,.doc,.docx" multiple onchange="displayFiles()" />
                @*<input type="file" name="files" id="files" accept=".pdf,.doc,.docx" multiple onchange="displayFiles()">*@
                <ul id="fileList"></ul>
                <input type="button" value="Clear" onclick="clearFiles()" class="form-control" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Finish" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


